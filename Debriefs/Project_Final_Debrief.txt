### **2024 Spring** - Yunhang Qin
### *Final* - Theme Cliche

## **Debrief**
I wanted to make a “cliche” top down arcade shooter game. The game to modify it from was the first game, and I am using the same gun system and aesthetics pack. Weapon is the major focus of this game and I really wanted to make this good. I decided that 4 is a good amount of weapon variety. I went with an AKM, M4, MCX, and SVD: two assault rifles with different impressions, a submachine gun, and a sniper rifle. AKM is something with a bigger spread, normal range, but higher damage per second (DPS) for the higher fire rate. M4 has a very small spread, long range, but a slower fire rate which gives it a lower DPS. MCX as a submachine gun has very short range, big spread, but very high rate of fire thus high DPS. Finally the SVD, having no spread, almost infinite range, but 1 bullet every two seconds. The SVD originally has an infinite penetration, but I changed it to having only being able to penetrate some amount of enemies since that was too overpowered, enemies tend to group together due to the similar path behaviors. I originally decided the amount to be 10 enemies by having a counter go off as it impacts, but when I first implement it it occasionally decreases the counter more than one since the bullet may touch the enemy for a prolonged duration depending on the angle of impact, I decided not to fix it because it is a cool feature with a little more uncertainty. 
The map of the game is procedurally generated. Since this is an arcade game, I hope to have more randomness and replayability, thus a different map would make the player not know what to expect and also not have any “loopholes” that they could utilize. There are four ground tiles, with the one with no decorations on it has a 4/7 chance of being spawned, whereas others three have 1/7 chance so that the ground would not be distracting while still looking cool with occasional decorations on it. The block is procedurally generated too and it costed me a great effort, I originally wanted random lengths of long tiles only but I felt that it would limit the player’s options in combat, so I altered the algorithm to have more single blocks, and that way the enemy behavior are a little more random and the player has more choices as to where to go. It felt more exciting too since larger tile segments tend to limit a player’s route. 
Since the entire map is randomly generated, the player also must be randomly spawned so that it doesn’t get stuck in the block. The player spawns in a random spot in the middle section of the map. The map is about 9 times the size of the camera.The enemy also randomly spawns across the entire map of the game, although they are programmed to spawn outside the perimeters of the player so they don’t get caught by surprise. Since it’s such a large map, to prevent the player from waiting too long, the enemy is sped up until it reaches a certain distance to the player. There are 3 enemies, the first enemy is the one with a dagger; the second enemy is faster than the first, with a higher attack speed, but lower health; the third enemy shoots bullets from a far, has slightly slower speed than the second, but slightly higher health than the second. The speed of the enemy is randomly generated within a range so that enemies don’t clump together. The third enemy that shoots bullets is to encourage players from moving around and make it more exciting. Since MCX has the highest DPS it’s easy to just hold the gun and only move occasionally, thus the shooting enemy has a slightly further range than the MCX just so that the player can’t reach the shooting enemy with the MCX. 
The course demo on procedural generation has been extremely helpful and basically made the idea possible. The demo on sequences are also critical as enemy attack behavior has been very difficult to program for me. Traditionally I just would have the player get damage if they touch each other when the attack animation players, and the use of sequences made the game feel so much nicer and allowed me to make the game more challenging with more interesting enemy behaviors. For enemies to move to the player, I used a path which uses mp_grid that I added during procedural generation (that used ds_grid). I watched a youtube tutorial for that and that has been very helpful. Although I keep getting the bug where some enemies are spawned stuck. Originally I thought it was the issue with getting spawned in the block tile which visually was the case, however, despite fixing that issue, they still would just get stuck and would not move even when completely unobstructed. It took me many hours but I still couldn’t fix it, so eventually I just decided that they would die if they don’t move after a certain amount of time, so that they don’t prevent the player from moving to the next level or completing the game and have to look for enemies across the map. It also added a little more variability so that every round in every game the amount of enemies they kill is slightly different. 
The player getting stuck into the wall randomly has been a historical issue with my game and with this assignment I finally realized that it’s a problem with collision boxes, so I made all the collision boxes across all sprites the same and that fixed the issue. Moving forward from now I might put all animations into a single file, and coding different image_indexes so it would be consistent. 

## **Self Evaluation**
**Execution** (Did your project meet the theme you gave it?) - 5
I think my game fits the theme really well and the format is a cliche arcade game. Though I added a lot of my own innovations and tweaked it towards where I like it. 

**Scope** (How well do you feel you scoped your game?) - 5

I think the scope of my game is very big for the case of a final. Procedural generated map, and sequences are two big new fields that I have never touched and they were a tremendous challenge. I spent a lot of time tweaking the gun and shooting behaviors, polishing the system and text so it looks nice. Although I did want to add a boss, I decided to step down from that as it is far too complicated and might break my other systems, making the project overly unpredictable. A boss is also something I have never done, which would make it a third new field to try and I decided that it was too risky. 

**Overall** - Pass

I think my game definitely passes as it meets all of the provided requirements.

Final Additional:
- The feedback that I will incorporate is substitute the enemy design with something more definitely "evil" such as zombies, beasts, or other monsters that are more acceptable and less disturbing to players when they have their corpse piled up together in game, a design that I really liked however a little problematic considering the fact that it's people in the current design.
